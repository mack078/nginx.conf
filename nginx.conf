#!/bin/bash

# 安装必要的依赖
echo "Installing necessary dependencies..."
yum install -y gcc gcc-c++ make libtool zlib zlib-devel pcre pcre-devel openssl openssl-devel wget vim unzip git lrzsz

# 检查是否安装成功
if [ $? -ne 0 ]; then
    echo "Failed to install dependencies. Exiting."
    exit 1
fi

# 下载最新的 Nginx
echo "Downloading Nginx..."
NGINX_VERSION="1.26.1"
wget -q http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz

# 检查是否下载成功
if [ $? -ne 0 ]; then
    echo "Failed to download Nginx. Exiting."
    exit 1
fi

# 解压 Nginx
echo "Extracting Nginx..."
tar -xf nginx-$NGINX_VERSION.tar.gz

# 配置 Nginx
echo "Configuring Nginx..."
cd nginx-$NGINX_VERSION
./configure \
  --prefix=/usr/local/nginx \
  --with-http_v2_module \
  --with-http_ssl_module \
  --with-http_realip_module \
  --with-http_stub_status_module \
  --with-stream \
  --with-http_sub_module

# 检查是否配置成功
if [ $? -ne 0 ]; then
    echo "Failed to configure Nginx. Exiting."
    exit 1
fi

# 编译并安装 Nginx
echo "Building and installing Nginx..."
make && make install

# 检查是否安装成功
if [ $? -ne 0 ]; then
    echo "Failed to build or install Nginx. Exiting."
    exit 1
fi

cd ..

# 复制配置文件
echo "Cloning Nginx configuration from GitHub..."
git clone https://github.com/mack078/nginx.conf.git

# 检查是否克隆成功
if [ $? -ne 0 ]; then
    echo "Failed to clone configuration repository. Exiting."
    exit 1
fi

echo "Moving configuration file..."
mv nginx.conf/nginx.conf /usr/local/nginx/conf/

# 禁用 SELinux
echo "Disabling SELinux..."
sed -i 's/^SELINUX=.*/SELINUX=disabled/g' /etc/sysconfig/selinux

# 创建目录
echo "Creating SSL and vhosts directories..."
mkdir -p /usr/local/nginx/ssl
mkdir -p /usr/local/nginx/vhosts

# 配置防火墙
echo "Disabling and stopping firewalld..."
systemctl disable firewalld
systemctl stop firewalld

# 创建软链接
echo "Creating symbolic link for Nginx..."
ln -s /usr/local/nginx/sbin/nginx /usr/local/bin/nginx

# 更新动态链接库缓存
echo "Updating dynamic linker cache..."
/sbin/ldconfig

# 检查可用的拥塞控制算法
echo "Available congestion control algorithms:"
sysctl net.ipv4.tcp_available_congestion_control

# 检查当前使用的拥塞控制算法
echo "Current congestion control algorithm:"
sysctl net.ipv4.tcp_congestion_control

# 启用 TCP BBR
echo "Enabling TCP BBR..."
echo "net.core.default_qdisc=fq" >> /etc/sysctl.conf
echo "net.ipv4.tcp_congestion_control=bbr" >> /etc/sysctl.conf

# 应用新的 sysctl 配置
sysctl -p

# 验证是否启用 BBR
echo "Verifying if BBR is enabled:"
sysctl net.ipv4.tcp_congestion_control

echo "Nginx installation, configuration, and TCP BBR setup completed successfully!"
